{
  "name": "hammerjs",
  "description": "HammerJS for ChiÏ‡",
  "version": "0.0.2",
  "repository": {
    "type": "git",
    "url": "https://github.com/nodule/hammerjs.git"
  },
  "dependencies": {
    "hammerjs": "latest"
  },
  "nodes": [
    {
      "ports": {
        "input": {
          "event": {
            "title": "Event",
            "type": "object",
            "required": true
          }
        },
        "output": {
          "timestamp": {
            "title": "Timestamp",
            "type": "number",
            "description": "Time the event occurred"
          },
          "target": {
            "title": "Target",
            "type": "any",
            "description": "Target element"
          },
          "touches": {
            "title": "Touches",
            "type": "array",
            "description": "touches (fingers, mouse) on the screen"
          },
          "pointerType": {
            "title": "Pointer Type",
            "type": "string",
            "description": "kind of pointer that was used. matches Hammer.POINTER_MOUSE|TOUCH"
          },
          "center": {
            "title": "Center",
            "type": "object",
            "description": "center position of the touches. contains pageX and pageY"
          },
          "deltaTime": {
            "title": "Delta Time",
            "type": "number",
            "description": "the total time of the touches in the screen"
          },
          "deltaX": {
            "title": "Delta X",
            "type": "number",
            "description": "the delta on x axis we haved moved"
          },
          "deltaY": {
            "title": "Delta Y",
            "type": "number",
            "description": "the delta on y axis we haved moved"
          },
          "velocityX": {
            "title": "Velocity X",
            "type": "number",
            "description": "the velocity on the x axis"
          },
          "velocityY": {
            "title": "Velocity Y",
            "type": "number",
            "description": "the velocity on the y axis"
          },
          "angle": {
            "title": "Angle",
            "type": "number",
            "description": "the angle we are moving"
          },
          "direction": {
            "title": "Direction",
            "type": "string",
            "description": "the direction we are moving. matches Hammer.DIRECTION_UP|DOWN|LEFT|RIGHT"
          },
          "distance": {
            "title": "Distance",
            "type": "number",
            "description": "the distance we haved moved"
          },
          "scale": {
            "title": "Scale",
            "type": "number",
            "description": "scaling of the touches, needs 2 touches"
          },
          "rotation": {
            "title": "Rotation",
            "type": "number",
            "description": "rotation of the touches, needs 2 touches"
          },
          "eventType": {
            "title": "Event Type",
            "type": "string",
            "description": "matches Hammer.EVENT_START|MOVE|END"
          },
          "srcEvent": {
            "title": "Source Event",
            "type": "object",
            "description": "the source event, like TouchStart or MouseDown"
          }
        }
      },
      "phrases": {
        "active": "Splitting event"
      },
      "description": "Takes a hammer event and spreads it to the ports",
      "ns": "hammerjs",
      "name": "event",
      "fn": "output = input.event\n"
    },
    {
      "dependencies": {
        "npm": {
          "hammerjs": "latest"
        }
      },
      "ports": {
        "input": {
          "element": {
            "title": "Element",
            "type": "any"
          },
          "event": {
            "type": "array",
            "title": "Event",
            "items": {
              "type": "string",
              "enum": [
                "hold",
                "tap",
                "doubletap",
                "drag",
                "dragstart",
                "dragend",
                "dragup",
                "dragdown",
                "dragleft",
                "dragright",
                "swipe",
                "swipeup",
                "swipedown",
                "swipeleft",
                "swiperight",
                "transform",
                "transformstart",
                "transformend",
                "rotate",
                "pinch",
                "pinchin",
                "pinchout",
                "touch",
                "release"
              ]
            }
          }
        },
        "output": {
          "event": {
            "title": "Event",
            "type": "object",
            "description": "The Event"
          }
        }
      },
      "phrases": {
        "active": "Hammering {input.event}"
      },
      "description": "Hammer",
      "ns": "hammerjs",
      "name": "hammer",
      "fn": "output = function() {\n\n  if(state.mc) {\n    state.destroy();\n    state.mc = null;\n  }\n\n  state.mc = new hammerjs(data);\n  state.on(input.event.join(' '), function(event) {\n    output({event: event});\n    done(); // to indicate completion.\n  });\n\n};\n"
    }
  ],
  "twigs": []
}